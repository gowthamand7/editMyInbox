import base64
from email import message_from_file
from io import StringIO

str = ""

orginal_response = base64.urlsafe_b64decode(str)
orginal_response = orginal_response.decode("utf-8")
b = message_from_file(StringIO(orginal_response))
mp = b.is_multipart()
if b.is_multipart():
    for payload in b.get_payload():
        # if payload.is_multipart(): ...
        print(payload.get_payload())
else:
    print(b.get_payload())
print(mp)
